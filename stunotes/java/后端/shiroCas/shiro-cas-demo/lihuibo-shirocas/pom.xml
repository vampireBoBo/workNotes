<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com</groupId>
  <artifactId>lihuibo-shirocas</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  
  <!-- 版本号控制 -->
  <properties>
  	<!-- ssm -->
  	<spring.version>4.0.5.RELEASE</spring.version> 
    <mysql.version>5.1.30</mysql.version>
    <mybatis.version>3.2.1</mybatis.version>
    <!-- shiro -->
    <shiro.version>1.7.1</shiro.version>
    <!-- 工具类 -->
    <jackson.version>2.2.3</jackson.version>
  </properties>
  
  <!-- 依赖管理  此模式下  子模块含有该模块下所有依赖-->
  <dependencies>
  	<!-- spring -->
  	<dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-context</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-context-support</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-aop</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-aspects</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-tx</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-jdbc</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	
	<!-- spring webmvc相关jar -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
    </dependency>
    
    <!-- mysql驱动包 -->
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
    </dependency>
        
    <!--mybatis依赖 -->
    <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
    </dependency>

    <!-- mybatis/spring包 -->
    <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>1.2.0</version>
    </dependency>
    
    <!-- alibaba data source 相关jar包-->
    <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>0.2.23</version>
    </dependency>
 
 	 <!-- alibaba fastjson 格式化对 -->  
    <dependency>  
        <groupId>com.alibaba</groupId>  
        <artifactId>fastjson</artifactId>  
        <version>1.1.41</version>  
    </dependency> 
    
    <!-- jackson json  若ssm接口返回为responsebody而不是视图名称时 则需要进行该插件进行数据解析  否则接口详情报错406-->
	<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
	</dependency>
	<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
	</dependency>
	<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
	</dependency>
	<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
			<version>${jackson.version}</version>
	</dependency>
    
  	<!-- 添加servlet3.0核心包 -->
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.0.1</version>
        <scope>provided</scope><!--  若使用maven tomcat插件时  则需要调整该jar的scope为provided 否则启动报错： [StandardEngine[Tomcat].StandardHost[localhost]] -->
    </dependency>
    <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>javax.servlet.jsp-api</artifactId>
        <version>2.3.1</version>
        <scope>provided</scope>
    </dependency>
    <!-- jstl -->
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.2</version>
    </dependency>
	
	<!-- 测试 -->
	<dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <!-- 依赖控制  此模式下 子模块 需手动去继承  同时 不需要设置版本号 版本号由此处的父级模块进行管控 -->
  <dependencyManagement>
	<dependencies>
		<!--shiro 相关jar -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-aspectj</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
	</dependencies>  
  </dependencyManagement>
  
  <!--  项目插件  该模块为版本控制模块  若子模块 需要使用时  也如需依次添加  只不过不需要些version  而不需要使用的子模块 则不需要添加即可  并不会默认给所有子模块 添加该插件 -->
  <build>
  	<pluginManagement>
  		<plugins>
  			<plugin>
  				<groupId>org.mybatis.generator</groupId>
		        <artifactId>mybatis-generator-maven-plugin</artifactId>
		        <version>1.3.5</version>
		        <configuration>
			          <verbose>true</verbose>
			          <overwrite>true</overwrite>
			          <configurationFile>src/main/resources/util/generatorConfig.xml</configurationFile>	
		        </configuration>
		        <dependencies>
		          	  <!-- 数据库驱动 -->
			          <dependency>
						    <groupId>mysql</groupId>
						    <artifactId>mysql-connector-java</artifactId>
						    <version>5.1.30</version>
					  </dependency>
		        </dependencies>
  			</plugin>
  		</plugins>
  	</pluginManagement>
  	<plugins>
  		<!-- maven 插件  所有子模块共享该插件-->
    	<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-install-plugin</artifactId>
			<configuration>
					<skip>true</skip>
			</configuration>
		</plugin>
		<!-- 编译版本 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.0</version>
            <configuration>
               <source>1.7</source>
               <target>1.7</target>
            </configuration>
        </plugin>
        <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-deploy-plugin</artifactId>
			<configuration>
					<skip>true</skip>
			</configuration>
		</plugin>
  	</plugins>
  </build>
  
  
  <modules>
  	<module>client1</module>
  	<module>client2</module>
    <module>client3</module>
  </modules>
</project>